# .github/workflows/claude-web-design-v3.yml
name: Claude Web Design Assistant v3

on:
  issues:
    types: [opened, edited]
  issue_comment:
    types: [created]

jobs:
  claude-web-designer:
    if: |
      (github.event_name == 'issues' && contains(github.event.issue.body, '@claude')) ||
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude'))
    
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      pull-requests: write
      issues: write
      actions: read
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
          persist-credentials: true

      - name: Set branch name
        run: |
          BRANCH_NAME="feature/issue-${{ github.event.issue.number }}-$(date +%s)"
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
          
      - name: Update Issue with branch info
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: ${{ github.event.issue.number }},
              body: `🚀 **自動処理開始**\n\n📋 **作業ブランチ**: \`${{ env.BRANCH_NAME }}\`\n⏳ **ステータス**: 処理中...\n🤖 **担当**: Claude AI Assistant`
            });
          
      - name: Claude Web Design Action
        uses: anthropics/claude-code-action@beta
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          
          # 実行制限
          max_turns: 8
          timeout_minutes: 12
          
          # ブランチ設定
          branch_prefix: "feature/issue-${{ github.event.issue.number }}-"
          
          # D's tech ホームページ制作サイト専用カスタム指示
          custom_instructions: |
            # 🏢 D's tech - 茨城県阿見町のホームページ制作サイト専用アシスタント
            
            あなたは茨城県阿見町のホームページ制作事業「D's tech」のWebサイト専門開発者です。
            
            ## 🎯 事業理解
            - **事業内容**: ホームページ制作・ウェブデザイン（個人事業主）
            - **対象地域**: 茨城県阿見町（全国対応可能）
            - **料金体系**: 月額1万円（税込）の定額制
            - **特徴**: 個人事業主ならではの丁寧なサポート・低価格・迅速対応
            
            ## 📂 現在のサイト構造
            ```
            /
            ├── index.html              # メインページ（ホーム・概要・サービス・料金・お問い合わせ）
            ├── pages/
            │   ├── faq.html           # よくある質問
            │   └── profile.html       # 代表者プロフィール
            ├── assets/
            │   ├── css/
            │   │   └── style.css      # 統合スタイルシート
            │   ├── js/
            │   │   └── main.js        # メイン機能（スライドショー・ナビ等）
            │   └── images/
            │       ├── logo.png       # ロゴ画像
            │       ├── slide/         # スライドショー画像（4枚）
            │       └── profile-placeholder.png
            ├── .github/workflows/     # GitHub Actions設定
            ├── CLAUDE.md              # サイト仕様書
            └── favicon.ico
            ```
            
            ## 🎨 サイト固有のデザイン・技術仕様
            
            ### 実装済み技術スタック
            - **HTML5**: セマンティックタグ・アクセシビリティ対応
            - **CSS3**: レスポンシブデザイン・CSS Grid・Flexbox・clamp関数
            - **JavaScript**: バニラJS・ES6+・クラスベース設計
            - **SEO**: LocalBusiness・Person型JSON-LD構造化データ
            
            ### 現在のデザイン特徴
            - **カラーパレット**: 青系統のモダンなデザイン
            - **レイアウト**: カードベース・グリッドシステム
            - **アニメーション**: スライドショー・カードホバー効果
            - **レスポンシブ**: モバイルファースト設計（767px/1199px ブレークポイント）
            
            ### 主要機能
            - **スライドショー**: 4枚画像・5秒間隔・インジケータークリック対応
            - **ナビゲーション**: 固定ヘッダー・ハンバーガーメニュー・スムーススクロール
            - **コンテンツ**: 概要6カード・サービス流れ6ステップ・FAQ・プロフィール
            
            ## 💻 D's tech サイト専用実装ルール
            
            ### 既存機能の保護
            1. **スライドショー機能**: main.jsの既存クラス構造を維持
            2. **レスポンシブ設計**: 現在のブレークポイント（767px/1199px）を保持
            3. **SEO構造化データ**: LocalBusiness・Person型JSON-LDを維持
            4. **ナビゲーション**: 既存のスムーススクロール・ハンバーガーメニューを保護
            
            ### 事業内容の一貫性
            - **料金表示**: 必ず「月額1万円（税込）」で統一
            - **地域表記**: 「茨城県阿見町」を正確に記載
            - **連絡先**: info@claude-design.com（仮想）を使用
            - **営業時間**: 平日09:00-17:00で統一
            
            ## 🚀 D's tech サイト専用PR作成ガイド
            
            ### タイトル例
            - "🏢 D's tech: 料金プラン表示を改善"
            - "📱 レスポンシブ: モバイル表示を最適化"
            - "✨ 機能: お問い合わせフォームを強化"
            - "🎨 デザイン: 阿見町アピールセクション追加"
            
            ## 🔧 自動化ワークフロー対応
            - 必ずPull Requestを作成してください
            - PRタイトルには「🏢 D's tech: 」プレフィックスを付けてください
            - 変更内容の詳細説明を含めてください
            - レビュー可能な状態でPRを作成してください
            - Issue #${{ github.event.issue.number }} の要望に対応してください
          
      - name: Link PR to Issue
        if: success()
        uses: actions/github-script@v7
        with:
          script: |
            // PRリストを取得
            const prs = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              head: `${context.repo.owner}:${{ env.BRANCH_NAME }}`,
              state: 'open'
            });
            
            if (prs.data.length > 0) {
              const pr = prs.data[0];
              
              // PRにIssueをリンク
              await github.rest.pulls.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: pr.number,
                body: `${pr.body}\n\n---\n\n🔗 **関連Issue**: #${{ github.event.issue.number }}\n📋 **自動作成**: GitHub Actions + Claude AI`
              });
              
              // Issueを更新
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: ${{ github.event.issue.number }},
                body: `✅ **処理完了**\n\n🔗 **作成されたPR**: #${pr.number}\n📋 **ブランチ**: \`${{ env.BRANCH_NAME }}\`\n🎯 **レビュー**: PRをご確認ください`
              });
              
              // Issueにラベル追加
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: ${{ github.event.issue.number }},
                labels: ['🤖 claude-processed', '📋 pr-created']
              });
            }
            
      - name: Handle failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: ${{ github.event.issue.number }},
              body: `❌ **処理失敗**\n\n🔍 **詳細**: [ワークフロー実行ログ](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})をご確認ください\n🔄 **再実行**: Issueを編集して再度 \`@claude\` でお試しください`
            });
            
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: ${{ github.event.issue.number }},
              labels: ['❌ claude-failed']
            });