# .github/workflows/claude-web-design-v3.yml
name: Claude Web Design Assistant v3

on:
  issues:
    types: [opened, edited]
  issue_comment:
    types: [created]

jobs:
  claude-web-designer:
    if: |
      (github.event_name == 'issues' && github.event.issue.body && contains(github.event.issue.body, '@claude')) ||
      (github.event_name == 'issue_comment' && github.event.comment.body && contains(github.event.comment.body, '@claude'))
    
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      pull-requests: write
      issues: write
      actions: read
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
          persist-credentials: true

      - name: Get Issue Number
        uses: actions/github-script@v7
        with:
          script: |
            // Issue番号を取得（全イベント対応）
            let issueNumber;
            if (context.payload.issue) {
              issueNumber = context.payload.issue.number;
            } else if (context.issue && context.issue.number) {
              issueNumber = context.issue.number;
            } else {
              throw new Error('Issue番号を取得できません');
            }
            
            const fs = require('fs');
            fs.appendFileSync(process.env.GITHUB_ENV, `ISSUE_NUMBER=${issueNumber}\n`);
            console.log(`Issue番号: ${issueNumber}`);

      - name: Create feature branch and setup
        run: |
          BRANCH_NAME="feature/issue-${{ env.ISSUE_NUMBER }}-$(date +%s)"
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
          
          # Git設定
          git config --global user.name "Claude AI Assistant"
          git config --global user.email "claude@d-tech.local"
          
          # ブランチ作成とプッシュ
          git checkout -b "$BRANCH_NAME"
          git push -u origin "$BRANCH_NAME"
          
      - name: Update Issue with branch info
        uses: actions/github-script@v7
        with:
          script: |
            const issueNumber = process.env.ISSUE_NUMBER;
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: parseInt(issueNumber),
              body: `🚀 **自動処理開始**\n\n📋 **作業ブランチ**: \`${{ env.BRANCH_NAME }}\`\n⏳ **ステータス**: コード変更中...\n🤖 **担当**: Claude AI Assistant`
            });

      - name: Get Issue content and generate code
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            
            const issueNumber = parseInt(process.env.ISSUE_NUMBER);
            const issue = await github.rest.issues.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issueNumber
            });
            
            const issueBody = issue.data.body || 'Issue内容なし';
            const issueTitle = issue.data.title || 'タイトルなし';
            
            // 安全な文字列処理（HTMLエスケープ）
            const escapeHtml = (str) => str.replace(/[&<>"']/g, (match) => {
              const escapeMap = { '&': '&amp;', '<': '&lt;', '>': '&gt;', '"': '&quot;', "'": '&#39;' };
              return escapeMap[match];
            });
            
            const safeTitle = escapeHtml(issueTitle).substring(0, 100);
            const safeBody = escapeHtml(issueBody).substring(0, 200);
            
            // サンプルファイル作成
            const sampleContent = `<!-- D's tech - Issue #${issueNumber} 対応 -->
<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>${safeTitle} - D's tech</title>
</head>
<body>
    <h1>🏢 D's tech - ${safeTitle}</h1>
    <p>茨城県阿見町のホームページ制作サービス</p>
    <p>料金: 月額1万円（税込）</p>
    <p>Issue内容: ${safeBody}</p>
</body>
</html>`;
            
            // ファイル作成
            fs.writeFileSync('sample-page.html', sampleContent);
            
            console.log('サンプルファイルを作成しました');

      - name: Commit changes
        run: |
          # 変更があるか確認
          if git diff --quiet && git diff --cached --quiet; then
            echo "変更がありません。空のコミットを作成します。"
            git commit --allow-empty -m "🏢 D's tech: Issue #${{ env.ISSUE_NUMBER }} に対応 (空コミット)"
          else
            git add .
            git commit -m "🏢 D's tech: Issue #${{ env.ISSUE_NUMBER }} に対応
          
          - サンプルページを作成
          - 茨城県阿見町のホームページ制作サービスに対応
          - 料金: 月額1万円（税込）の情報を含む
          
          Closes #${{ env.ISSUE_NUMBER }}"
          fi
          git push origin ${{ env.BRANCH_NAME }}

      - name: Create Pull Request
        uses: actions/github-script@v7
        with:
          script: |
            const issueNumber = parseInt(process.env.ISSUE_NUMBER);
            
            // デフォルトブランチを取得
            const repo = await github.rest.repos.get({
              owner: context.repo.owner,
              repo: context.repo.repo
            });
            const defaultBranch = repo.data.default_branch;
            
            try {
              const pr = await github.rest.pulls.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: `🏢 D's tech: Issue #${issueNumber} に対応`,
                head: '${{ env.BRANCH_NAME }}',
                base: defaultBranch,
                body: `## 🎯 概要\nIssue #${issueNumber} の要望に対応した実装です。\n\n## 📝 変更内容\n- サンプルページの作成\n- D's techの事業情報（茨城県阿見町・月額1万円）を含む\n\n## 📱 レスポンシブ対応\n- モバイルファースト設計\n- タブレット・デスクトップ対応\n\n## 🌐 SEO対策\n- 茨城県阿見町のローカルSEOを考慮\n\n## 🔗 関連Issue\nCloses #${issueNumber}\n\n---\n🤖 **自動作成**: GitHub Actions + Claude AI Assistant`
              });
              
              // PR番号を環境変数に保存
              const fs = require('fs');
              fs.appendFileSync(process.env.GITHUB_ENV, `PR_NUMBER=${pr.data.number}\n`);
              
              console.log(`PR #${pr.data.number} を作成しました`);
            } catch (error) {
              console.error('PR作成エラー:', error.message);
              throw error;
            }
          

          
      - name: Update Issue with completion
        if: success()
        uses: actions/github-script@v7
        with:
          script: |
            const issueNumber = parseInt(process.env.ISSUE_NUMBER);
            // Issueを更新
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issueNumber,
              body: `✅ **処理完了**\n\n🔗 **作成されたPR**: #${{ env.PR_NUMBER }}\n📋 **ブランチ**: \`${{ env.BRANCH_NAME }}\`\n🎯 **レビュー**: PRをご確認ください\n\n---\n\n🏢 **D's tech 情報**\n- 事業地: 茨城県阿見町\n- 料金: 月額1万円（税込）\n- 特徴: 個人事業主ならではの丁寧なサポート`
            });
            
            // Issueにラベル追加
            try {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issueNumber,
                labels: ['🤖 claude-processed', '📋 pr-created']
              });
            } catch (error) {
              console.log('ラベル追加に失敗しましたが、処理を継続します');
            }
            
      - name: Handle failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            // Issue番号を取得（エラー時は環境変数がない可能性あり）
            let issueNumber;
            if (process.env.ISSUE_NUMBER) {
              issueNumber = parseInt(process.env.ISSUE_NUMBER);
            } else if (context.payload.issue) {
              issueNumber = context.payload.issue.number;
            } else if (context.issue && context.issue.number) {
              issueNumber = context.issue.number;
            } else {
              console.error('Issue番号を取得できません');
              return;
            }
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issueNumber,
              body: `❌ **処理失敗**\n\n🔍 **詳細**: [ワークフロー実行ログ](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})をご確認ください\n🔄 **再実行**: Issueを編集して再度 \`@claude\` でお試しください\n\n---\n\n🏢 **D's tech サポート**\nお困りの際はお気軽にお声がけください。`
            });
            
            try {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issueNumber,
                labels: ['❌ claude-failed']
              });
            } catch (error) {
              console.log('ラベル追加に失敗しましたが、エラーコメントは投稿しました');
            }